require 'rubygems'
require 'yaml'
require 'json'
require 'date'

namespace :test do
  namespace :conformance do
    desc "Run conformance test suite"
    task :run do
      exec('mvn test')
    end
  end

  desc "Run conformance test suite"
  task :conformance => ['conformance:run'] do
  end
end

desc "Run conformance test suite"
task :test => ['test:conformance']

namespace :tlds do
  desc "Update tlds in twitter-text.js based on conformance tld_lib.yml"
  task :update do
    tld_yml = repo_path('..', 'conformance', 'tld_lib.yml')
    tlds = YAML.load_file(tld_yml)
    cctlds = format_tlds(tlds['country'], 100)
    gtlds = format_tlds(tlds['generic'], 100)

    java_regex = File.read(repo_path('src/com/twitter/Regex.java'))
    replace_tlds!(java_regex, 'URL_VALID_GTLD', gtlds)
    replace_tlds!(java_regex, 'URL_VALID_CCTLD', cctlds)
    File.open(repo_path('src/com/twitter/Regex.java'), 'w') do |file|
      file.write(java_regex)
    end
  end
end

def format_tlds(tlds, line_length)
  tld_line = []
  lines = []
  tlds.each do |tld|
    if line_java(tld_line + [tld]).length > line_length
      lines << line_java(tld_line)
      tld_line = [tld]
    else
      tld_line << tld
    end
  end
  lines << line_java(tld_line) if tld_line.length > 0
  lines.join("|\" +\n") + '" +'
end

def line_java(tlds)
  quote = '"'
  indent = 4
  ' ' * indent + quote + tlds.join('|')
end

def replace_tlds!(source_code, name, tlds)
  start = Regexp.quote("private static final String #{name} =")

  source_code.sub!(/#{start}.*?;\n/m, <<-D)
private static final String #{name} =
    "(?:(?:" +
#{tlds}
    ")(?=[^\\\\\\p{Alnum}@]|$))";
D
end

def repo_path(*path)
  File.join(File.dirname(__FILE__), *path)
end
